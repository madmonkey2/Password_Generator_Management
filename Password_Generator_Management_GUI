from tkinter import *
from tkinter import messagebox
import random
import pyperclip 
from datetime import datetime
import yaml
import hashlib


NAVY = '#0A043C'
WHITE = '#FFFFFF'
BLACK = '#000000'
GREEN = '#00FF00'

# ---------------------------- PASSWORD GENERATOR ------------------------------- #

def PasswordGenerator():
    letters = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
    numbers = list('0123456789')
    symbols = list('!@#$%^&*()_+')
    letters_lower = list(map(str.lower, letters))
    letters.extend(letters_lower)

    # Return a number between a and b (both included):
    
    num_letters = scale_bar.get()   # num_letters=5 -> 8 characters; else num_letters=13 -> 16 characters; BUT INCONSISTENT
    num_numbers = random.randint(0, 1)
    num_symbols = random.randint(0, 1)

    # Creating password and concat to a list
    rand_letters = [random.choice(letters) for i in range(num_letters)]
    rand_numbers = [random.choice(numbers) for i in range(num_numbers)]
    rand_symbols = [random.choice(symbols) for i in range(num_symbols)]

    created_password = rand_letters + rand_numbers + rand_symbols

    # Shuffle the positions and join to create str
    random.shuffle(created_password)
    created_password = ''.join(created_password)

    # Insert into password_entry label upon clicking "Generate password"
    password_entry.delete(0, END)
    password_entry.insert(0, created_password)

    # Copy created password to clipboard
    pyperclip.copy(created_password)


# ---------------------------- Password Management ------------------------------- #

def PasswordManagement():
    # GETTING THE USER INPUTS
    user_website = website_entry.get()
    user_email = email_entry.get()
    user_password = password_entry.get()

    user_password = user_password.hashlib.sha256(password_entry.get().encode()).hexdigest() # Need to work on this

    new_data = {
        user_website: {
            'email': user_email,
            'password': user_password
        }
    }
    if len(user_website) != 0 and len(user_password) != 0:

        try:
            with open('data.yaml', 'r') as data_file:
                data = yaml.safe_load(data_file)
                data.update(new_data)
        except FileNotFoundError:
            with open('data.yaml', 'w') as data_file:
                yaml.safe_dump(new_data, data_file, indent=4)
        else:
            is_correct = messagebox.askyesno(
                title=f"{user_website}",
                message=f"\n'email': {user_email}\n'password': {user_password}\n\nPlease confirm before saving!")
            if is_correct:
                with open('data.yaml', 'w') as data_file:
                    yaml.safe_dump(data, data_file, indent=4)
                    website_entry.delete(0, END)
                    password_entry.delete(0, END)
    else:
        # IF WEBSITE OR EMAIL ENTRY IS BLANK
        messagebox.showwarning(
            title='Oops',
            message="Please don't leave any fields empty!"
        )


# ---------------------------- UI SETUP ------------------------------- #

window = Tk()
window.title("Password Generator & App Management (Team 9)")
icon = PhotoImage(file='icon_logo.png')
window.iconphoto(True, icon)
window.config(padx=50, pady=50, bg=NAVY)


# ROW 0
canvas = Canvas(height=200, width=200, bg=NAVY, highlightthickness=0)
img = PhotoImage(file='icon_logo.png')
canvas.create_image(100, 100, image=img)
canvas.grid(row=0, column=1)

# ROW 1
website_label = Label(text='Website:', bg=NAVY, fg=GREEN)
website_label.grid(row=1, column=0, sticky="W")

website_entry = Entry(font=('Times New Roman', 15))
website_entry.grid(row=1, column=1, columnspan=2, sticky="EW")
website_entry.focus()

# ROW 2
email_label = Label(text='Email/Username:', bg=NAVY, fg=GREEN)
email_label.grid(row=2, column=0, sticky="W")

email_entry = Entry(font=('Times New Roman', 15))
email_entry.grid(row=2, column=1, columnspan=2, sticky="EW")
email_entry.insert(0, 'Team9_email@gmail.com')

# ROW 3
scale_label = Label(window, text="Length", bg=NAVY, fg=GREEN)
scale_label.grid(row=3, column=0, sticky="W")

scale_bar = Scale(window, font=('Times New Roman', 15, 'bold'), from_=8, to=16, orient=HORIZONTAL, resolution=8,
                  bg=BLACK, fg=WHITE, troughcolor=NAVY)
scale_bar.grid(row=3, column=1, sticky='EW')

# ROW 4
password_label = Label(text='Password:', bg=NAVY, fg=GREEN)
password_label.grid(row=4, column=0, sticky="W")

password_entry = Entry(font=('Times New Roman', 15))
password_entry.grid(row=4, column=1, sticky="EW")

password_button = Button(text='Generate Password', bg=BLACK, fg=GREEN, command=PasswordGenerator)
password_button.grid(row=4, column=2, sticky="EW")

# ROW 5
button = Button(text='Add', bg=BLACK, fg=GREEN, command=PasswordManagement)
button.grid(row=5, column=1, columnspan=2, sticky="EW")
button.config(pady=2)

window.mainloop()
